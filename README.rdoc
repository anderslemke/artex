**Updated:** The original implementation was not thread safe. The expectation was that the working
directory would not change within one ruby process. This doesn't work well in multi-threaded
environments. Now absolute paths are used instead of assuming the current working
directory is for one PDF generation.

{<img src="https://gitlab.com/korobkov/artex/badges/master/build.svg" alt="Build status" />}[https://gitlab.com/korobkov/artex/pipelines]
{<img src="https://gitlab.com/korobkov/artex/badges/master/coverage.svg" alt="Coverage report" />}[https://korobkov.gitlab.io/artex/coverage]
{<img src="https://codeclimate.com/github/korobkov/artex/badges/coverage.svg" />}[https://codeclimate.com/github/korobkov/artex/coverage]
{<img src="https://codeclimate.com/github/korobkov/artex/badges/gpa.svg" />}[https://codeclimate.com/github/korobkov/artex]
{<img src="https://gemnasium.com/korobkov/artex.svg" alt="Dependency Status" />}[https://gemnasium.com/korobkov/artex]
{<img src="https://inch-ci.org/github/korobkov/artex.svg?branch=master" alt="Inline docs" />}[https://inch-ci.org/github/korobkov/artex]
{<img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="License: MIT" />}[https://opensource.org/licenses/MIT]
{<img src="https://img.shields.io/badge/workflow-global%20rebase-blue.svg" alt="Workflow: global rebase" />}[https://git-scm.com/book/en/v2/Git-Branching-Rebasing#Rebase-vs.-Merge]

= ArTeX: TeX/PDF Generation for Ruby

Project homepage (FAQ, manual, documentation, contact info): https://github.com/avarteqgmbh/artex

Source repository at: https://gitlab.com/korobkov/artex

== Dependencies

* xelatex executable, available in modern LaTeX distributions, like TeXLive
* Requires Ruby

== Rendering from Rails

For each action you want to render pdf from, add a file, for example
`app/views/products/show.pdf.rtex`. Additionally, you need a layout with the
same extensions, which should contain the whole LaTeX preamble and yield within
the {document}.

== Motivation
This gem has been forked from the rtex gem (http://github.com/bruce/rtex).
RTeX can be used either as stand alone executable or as a rails plugin.
Using it as rails plugin means to create PDF files using the rails rendering engine.
This will bring you in trouble if you don't want to generate your PDF files within controllers.
In contrast to that ArTeX has no dependencies on ActionPack and thus can also be used in models.

We'll keep on updating the gem and we'll try to provide some examples in the future.
Besides of that the code will be iteratively cut down, rewritten and enhanced.

== Requirements (tested)

* OS: {GNU/Linux}[https://www.gnu.org/]
* Language: {MRI 2.3}[https://www.ruby-lang.org/en/] || {JRuby 9.1}[http://jruby.org/] on {OpenJDK 8}[http://openjdk.java.net/]
